name: Publish Razzle node apps to ECR

on:
  push:
    branches: [ "node-apps/staging" ]

env:
  AWS_ACCOUNT: ${{ secrets.AWS_ACCOUNT }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}  
  AWS_REGION: eu-west-1

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{env.AWS_ACCESS_KEY_ID}}
          aws-secret-access-key: ${{env.AWS_SECRET_ACCESS_KEY}}
          aws-region: ${{env.AWS_REGION}}

      - name: Get the commit hashes
        id: vars
        shell: bash
        run: |
          echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
          echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"      

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
    
      - name: Build, tag, and push the image to Amazon ECR
        id: build-image
        env:
          LOCAL: true
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: razzleaccountmanager
          IMAGE_TAG: ${{ steps.vars.outputs.sha_short }}
        run: |
          # Build a docker container and push it to ECR
          make IMAGE_TAG=$IMAGE_TAG build-image
          docker tag razzleai/razzle-apps-node:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:${IMAGE_TAG}-staging
          echo "Pushing image to ECR..."
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:${IMAGE_TAG}-staging
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:${IMAGE_TAG}-staging"

      